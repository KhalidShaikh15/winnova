rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users can only read/update their own data.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Games are publicly readable, but only writable by admins.
    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Tournaments are publicly readable, but only writable by admins.
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Leaderboard is publicly readable, but only writable by admins.
    match /leaderboard/{entryId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Registrations can be created by any authenticated user.
    // Admins can read/write all registrations.
    // Users can only read their own registrations.
    match /registrations/{registrationId} {
      allow create: if request.auth != null;
      allow read: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.user_id);
      allow update, delete: if isAdmin();
    }

    // Match results can only be written by admins.
    // Authenticated users can read all match results for leaderboard purposes.
    match /matches/{matchId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // Admins collection can only be read/written by other admins.
    // This prevents users from discovering who the admins are.
    match /admins/{adminId} {
        allow read, write: if isAdmin();
    }
  }
}
