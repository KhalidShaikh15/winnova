
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // === games collection
    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === tournaments collection
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if isAdmin();

      // === registrations subcollection
      match /registrations/{registrationId} {
        // Logged in users can create their own registration
        allow create: if request.auth != null && request.resource.data.user_id == request.auth.uid;
        
        // Admins and the user who created it can read
        allow read: if isAdmin() || (request.auth != null && resource.data.user_id == request.auth.uid);

        // Admins can update/delete
        allow update, delete: if isAdmin();
      }
    }

    // === matches collection
    match /matches/{matchId} {
      allow read: if true;
      allow write: if isAdmin(); 
    }
    
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.uid == adminId;
      allow write: if false; // Should only be managed from the console
    }
    
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

  }
}
