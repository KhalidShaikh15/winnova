
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Check if user is admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // === games collection
    match /games/{gameId} {
      allow read: if true;              // ✅ public read
      allow write: if isAdmin();        // ✅ admin-only write
    }

    // === tournaments collection
    match /tournaments/{tournamentId} {
      allow read: if true;              // ✅ public read
      allow write: if isAdmin();
    }

    // === teams collection
    match /teams/{teamId} {
      allow read: if true;              // ✅ public read
      allow write: if isAdmin();
    }

    // === matches collection
    match /matches/{matchId} {
      allow read: if true;              // ✅ public read
      allow write: if isAdmin();
    }

    // === registrations collection
    match /registrations/{registrationId} {
      allow create: if request.auth != null;  // ✅ allow signed-in users to register
      allow read: if request.auth != null; // ✅ allow signed-in users to read
      allow update, delete: if isAdmin(); // ✅ admin-only write
    }

    // === results collection
    match /results/{resultId} {
      allow read: if true;              // ✅ public read
      allow write: if isAdmin();
    }

    // === leaderboard collection
    match /leaderboard/{entryId} {
      allow read: if true;              // ✅ public read (this was the main fix)
      allow write: if isAdmin();
    }

    // === payouts collection
    match /payouts/{payoutId} {
      allow read, write: if isAdmin();
    }

    // === admins collection
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.uid == adminId;
      allow create, update, delete: if isAdmin();
    }
  }
}
