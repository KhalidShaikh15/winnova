
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // === games collection
    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === tournaments collection
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === teams collection
    match /teams/{teamId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === matches collection
    match /matches/{matchId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === registrations collection
    match /registrations/{registrationId} {
      allow create: if request.auth != null;
      // Allow user to read their own registration, or admin to read any
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.user_id);
      // Allow admin to query/list all registrations
      allow list: if isAdmin();
      // Allow admin to update/delete
      allow update, delete: if isAdmin();
    }

    // === results collection
    match /results/{resultId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === leaderboard collection
    match /leaderboard/{entryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // === payouts collection
    match /payouts/{payoutId} {
      allow read, write: if isAdmin();
    }

    // === admins collection
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.uid == adminId;
      allow create, update, delete: if isAdmin();
    }

    // === users collection (new rules)
    match /users/{userId} {
      // Allow unauthenticated reads (needed for username availability check during signup)
      allow read: if true;

      // Allow a signed-in user to create their own profile document
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow signed-in users to update their own document
      allow update: if request.auth != null && request.auth.uid == userId;

      // Allow only admin to delete any user document
      allow delete: if isAdmin();
    }
  }
}
